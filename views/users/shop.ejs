<%- include("../partials/userheader") %>

<style>
    .search-wrapper {
        position: relative;
    }

    .input-holder {
        height: 50px;
        width: 100%;
        overflow: hidden;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 30px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        display: flex;
    }

    .input-holder .form-control {
        height: 100%;
        border: none;
        background: transparent;
        padding: 0 150px 0 20px;
        font-size: 16px;
        color: #333;
    }

    .input-holder .form-control:focus {
        box-shadow: none;
    }

    .input-holder .search-btn {
        width: 130px;
        height: 100%;
        border: none;
        background: #088178;
        color: #fff;
        border-radius: 0 30px 30px 0;
        cursor: pointer;
        transition: background 0.3s ease;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 16px;
    }

    .input-holder .search-btn:hover {
        background: #475D77;
    }

    .input-holder .search-btn i {
        margin-right: 5px;
    }
</style>

<main class="main">
    <div class="row m-4">
        <div class="col-lg-3">
            <div class="widget-category mb-30">
                <h5 class="section-title style-1 mb-30 wow fadeIn animated">
                    Category
                </h5>
                <ul class="categories">
                    <% Categorys.forEach(category => { %>
                        <li>
                            <input type="hidden" name="categoryId" value="<%= category.id %>">
                            <a href="<%= category.link %>"><%= category.name %></a>
                        </li>
                    <% }) %>
                </ul>
            </div>
            <div class="widget-category mb-30">
                <h5 class="section-title style-1 mb-30 wow fadeIn animated">
                    Sort by
                </h5>
                <ul class="categories">
                    <li><a href="/shop?sort=az">aA - zZ </a></li>
                    <li><a href="/shop?sort=za">zZ - aA</a></li>
                    <li><a href="/shop?sort=priceLowHigh">Price: Low to High</a></li>
                    <li><a href="/shop?sort=priceHighLow">Price: High to Low</a></li>
                </ul>
            </div>
            <div class="widget-category mb-30">
                <h5 class="section-title style-1 mb-30 wow fadeIn animated">
                    Price Range
                </h5>
                <ul class="categories">
                    <li><a href="shop-grid-right.html">$0-$200</a></li>
                    <li><a href="shop-grid-right.html">$200-$400</a></li>
                    <li><a href="shop-grid-right.html">$400-$600</a></li>
                    <li><a href="shop-grid-right.html">$600-$800</a></li>
                    <li><a href="shop-grid-right.html">800$+</a></li>
                </ul>
            </div>
        </div>

        <div class="col-lg-9">
            <div class="row justify-content-center mb-4">
                <div class="col-md-6">
                    <div class="search-wrapper">
                        <div class="input-holder">
                            <input type="text" class="form-control" id="searchInput" placeholder="Search products..." />
                            <button class="search-btn" type="button" id="searchButton">
                                <i class="fa fa-search"></i> <span>Search</span>
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row product-grid-3" id="productGrid">
                <% products.forEach(product => { %>
                    <div class="col-lg-4 col-md-4 col-12 col-sm-6">
                        <div class="product-cart-wrap mb-30">
                            <div class="product-img-action-wrap">
                                <div class="product-img product-img-zoom">
                                    <a href="/product-single/<%= product.id %>">
                                        <img class="default-img" src="productimages/<%= product.images[0] %>"
                                            alt="<%= product.name %>">
                                    </a>
                                </div>
                                <div class="product-content-wrap">
                                    <h2><a href="/product-single/<%= product.id %>">
                                            <%= product.name %>
                                        </a></h2>
                                    <div class="rating-result" title="">
                                        <span>
                                            <span>
                                                <%= product.rating %>
                                            </span>
                                        </span>
                                    </div>
                                    <% if (product.afterdiscount > 0) { %>
                                    <div class="product-price">
                                        <span class="old-price">
                                            <%= product.price %>
                                        </span>
                                        <span>₹<%= product.afterdiscount %></span>
                                    </div>
                                    <% } else { %>
                                    <div class="product-price">
                                        <span>₹<%= product.price %></span>
                                    </div>
                                    <% } %>
                                    <div class="product-action-1 show">
                                        <button class="add-to-cart-button" data-id="<%= product.id %>"><i
                                                class="fi-rs-shopping-bag-add"></i></button>

                                        <!-- Heart Symbol Button -->
                                        <button class="add-to-favorites-button" data-id="<%= product.id %>"><i
                                                class="fi-rs-heart"></i></button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }) %>
            </div>
        </div>
    </div>

    <div class="pagination-area mt-30 mb-50 text-center">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-center">
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                    </li>
                <% } %>
            </ul>
        </nav>
    </div>
</main>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', function (){
        const addToCartButtons = document.querySelectorAll('.add-to-cart-button');

        addToCartButtons.forEach(button => {
            button.addEventListener('click', function (event) {
                event.preventDefault();

                const productId = this.getAttribute('data-id');
                checkStockAndAddToCart(productId);
            });
        });

        async function checkStockAndAddToCart(productId) {
            console.log(productId,'checkStockand ')
            try {
                const stockUrl = `/product/check-stock/${productId}`;
                const response = await fetch(stockUrl);

                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                const data = await response.json();

                if (data.countinstock > 0) {
                    addToCart(productId);
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Out of Stock',
                        text: 'This product is currently out of stock.',
                    });
                }
            } catch (error) {
                console.error('Error checking stock:', error);

                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while checking stock availability.',
                });
            }
        }

        function addToCart(productId) {
            console.log(productId,'productId is comming')
            const url = `/cart/add/${productId}`;

            fetch(url, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }

                return response.json();
            })
            .then(data => {
                console.log('Product added to cart:', data);

                if (data.error === 'Product already in cart') {
                    Swal.fire({
                        icon: 'error',
                        title: 'Product Already in Cart',
                        text: 'The selected product is already in your cart.',
                    });
                } else {
                    window.location.href = '/cart';
                }
            })
            .catch(error => {
                console.error('Error adding product to cart:', error);

                Swal.fire({
                    icon: 'info',
                    title: 'Product Already in Cart',
                    text: 'The selected product is already in your cart.',
                });
            });
        }
    });
</script>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const addToWishlistButtons = document.querySelectorAll('.add-to-favorites-button');

        addToWishlistButtons.forEach(button => {
            button.addEventListener('click', function (event) {
                event.preventDefault();

                const productId = this.getAttribute('data-id');
                addToWishlist(productId);
            });
        });

        async function addToWishlist(productId) {
            console.log(productId, "killmilljilll");
            const url = `/wishlist/add/${productId}`;

            try {
                const response = await fetch(url, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ productId: productId }) // Include productId in the request body
                });

                const data = await response.json();

                if (data.success) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Success',
                        text: data.message || 'Product added to wishlist.',
                    });
                } else {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Warning',
                        text: data.message || 'An error occurred while adding the product to your wishlist.',
                    });
                }
            } catch (error) {
                console.error('Error adding product to wishlist:', error);

                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An error occurred while adding the product to your wishlist.',
                });
            }
        }
    });
</script>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
}
<script>
    const categoryLinks = document.querySelectorAll('.categories li');

    categoryLinks.forEach(li => {
        const link = li.querySelector('a');
        const categoryId = li.querySelector('input[type="hidden"]').value;

        link.addEventListener('click', async (event) => {
            event.preventDefault();

            try {
                const response = await fetch(`/products?categoryId=${categoryId}`);
                const products = await response.json();
                updateProductGrid(products);
            } catch (error) {
                console.error('Error fetching products:', error);
            }
        });
    });

    function updateProductGrid(products) {
        const productGridContainer = document.querySelector('.product-grid-3');
        productGridContainer.innerHTML = '';

        products.forEach(product => {
            const productElement = document.createElement('div');
            productElement.classList.add('col-lg-4', 'col-md-4', 'col-12', 'col-sm-6');
            productElement.innerHTML = `
                <div class="product-cart-wrap mb-30">
                    <div class="product-img-action-wrap">
                        <div class="product-img product-img-zoom">
                            <a href="/product-single/${product.id}">
                                <img class="default-img" src="productimages/${product.images[0]}" alt="${product.name}">
                            </a>
                        </div>
                        <div class="product-content-wrap">
                            <h2><a href="/product-single/${product.id}">${product.name}</a></h2>
                            <div class="rating-result" title="">
                                <span>
                                    <span>
                                        
                                    </span>
                                </span>
                            </div>
                            ${product.afterdiscount > 0 ? `
                                <div class="product-price">
                                    <span class="old-price">${product.price}</span>
                                    <span>₹${product.afterdiscount}</span>
                                </div>
                            ` : `
                                <div class="product-price">
                                    <span>₹${product.price}</span>
                                </div>
                            `}
                            <div class="product-action-1 show">
                                <button class="add-to-cart-button" data-id="${product.id}"><i class="fi-rs-shopping-bag-add"></i></button>
                                <button class="add-to-favorites-button" data-id="${product.id}"><i class="fi-rs-heart"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
            `;
            productGridContainer.appendChild(productElement);
        });
    }
</script>

  <!-- <script>
    const searchInput = document.getElementById('searchInput');
    const productGrid = document.getElementById('productGrid');
    const allProducts = <%- JSON.stringify(products) %>;
    console.log(allProducts,'killgodhhd')

    searchInput.addEventListener('input', filterProducts);

    function filterProducts() {
        const searchTerm = searchInput.value.trim().toLowerCase();
        const filteredProducts = allProducts.filter(product =>
            product.name.toLowerCase().includes(searchTerm)
        );
        console.log(filteredProducts,'hello worlddw')
        renderProducts(filteredProducts);
    }

    function renderProducts(products) {
        productGrid.innerHTML = '';
        products.forEach(product => {
            console.log(product,'lemonside')
            const productElement = document.createElement('div');
            productElement.classList.add('col-lg-4', 'col-md-4', 'col-12', 'col-sm-6');
            productElement.innerHTML = `
                <div class="product-cart-wrap mb-30">
                    <div class="product-img-action-wrap">
                        <div class="product-img product-img-zoom">
                            <a href="/product-single/${product.id}">
                                <img class="default-img" src="productimages/${product.images[0]}" alt="${product.name}">
                            </a>
                        </div>
                        <div class="product-content-wrap">
                            <h2><a href="/product-single/${product.id}">${product.name}</a></h2>
                            <div class="rating-result" title="">
                                <span>
                                    <span>
                                        
                                    </span>
                                </span>
                            </div>
                            ${product.afterdiscount > 0 ? `
                                <div class="product-price">
                                    <span class="old-price">${product.price}</span>
                                    <span>₹${product.afterdiscount}</span>
                              </div>
                            ` : `
                                <div class="product-price">
                                    <span>₹${product.price}</span>
                                </div>
                            `}
                            <div class="product-action-1 show">
                                <button class="add-to-cart-button" data-id="${product.id}"><i class="fi-rs-shopping-bag-add"></i></button>
                                <button class="add-to-favorites-button" data-id="${product.id}"><i class="fi-rs-heart"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
            `; 
            productGrid.appendChild(productElement);

            // Add event listener for add-to-cart button
            const addToCartButton = productElement.querySelector('.add-to-cart-button');
            addToCartButton.addEventListener('click', () => {
                checkStockAndAddToCart(product.id);
                console.log(product.id,'hello world ')
            });

            // Add event listener for add-to-wishlist button
            const addToWishlistButton = productElement.querySelector('.add-to-favorites-button');
            addToWishlistButton.addEventListener('click', () => {
               addToWishlist(product.id);
            });
        });
    }

    // Initially render all products
    renderProducts(allProducts);

    function addToCart(productId) {
        // Implement add-to-cart functionality here
        console.log(`Product ${productId} added to cart`);
    }

    function addToWishlist(productId) {
        // Implement add-to-wishlist functionality here
        console.log(`Product ${productId} added to wishlist`);
    }
</script>  -->

<%- include("../partials/userfooter") %>