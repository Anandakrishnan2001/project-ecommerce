<!DOCTYPE HTML>
<html lang="en">

<head> 
    <meta charset="utf-8">
    <title>Evara Dashboard</title>
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta property="og:title" content="">
    <meta property="og:type" content="">
    <meta property="og:url" content="">
    <meta property="og:image" content="">
    <!-- Favicon -->
    <link rel="shortcut icon" type="image/x-icon" href="/admin_assets/imgs/theme/favicon.svg">
    <!-- Template CSS -->
    <link href="/admin_assets/css/main.css" rel="stylesheet" type="text/css" />
    <style>
        /* Add custom styles for active sidebar items */
        .menu-aside .menu-item.active a {
            background-color: #333;
        }

        .menu-aside .menu-item.active a .icon {
            color: #fff;
        }

        .menu-aside .menu-item.active a .text {
            color: #fff;
        }
    </style>
    <style>
        .input-group input[type="text"] {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
        
        .input-group button {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
        
        .rounded-pill {
            border-radius: 50px !important;
        }</style>
</head>

<body>
    <!-- Header -->
    <header class="main-header navbar">
        <div class="col-search">
            <!-- Search form can be added here if needed -->
        </div>
        <div class="col-nav">
            <!-- Sidebar toggle button -->
            <button class="btn btn-icon btn-mobile me-auto" data-trigger="#offcanvas_aside">
                <i class="material-icons md-apps"></i>
            </button>
            <!-- User profile dropdown -->
            <ul class="nav">
                <!-- User notifications -->
                <li class="nav-item">
                    <a class="nav-link btn-icon" href="#">
                        <i class="material-icons md-notifications animation-shake"></i>
                        <span class="badge rounded-pill">3</span>
                    </a>
                </li>
                <!-- Fullscreen toggle -->
                <li class="nav-item">
                    <a href="#" class="requestfullscreen nav-link btn-icon">
                        <i class="material-icons md-cast"></i>
                    </a>
                </li>
                <!-- Language dropdown -->
                <li class="dropdown nav-item">
                    <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownLanguage"
                        aria-expanded="false">
                        <i class="material-icons md-public"></i>
                    </a>
                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownLanguage">
                        <!-- Language options -->
                        <!-- Example: -->
                        <a class="dropdown-item text-brand" href="#"><img src="/admin_assets/imgs/theme/flag-us.png"
                                alt="English">English</a>
                        <!-- Add more language options as needed -->
                    </div>
                </li>
                <!-- User profile dropdown -->
                <li class="dropdown nav-item">
                    <a class="dropdown-toggle" data-bs-toggle="dropdown" href="#" id="dropdownAccount"
                        aria-expanded="false">
                        <img class="img-xs rounded-circle" src="/admin_assets/imgs/people/avatar2.jpg" alt="User">
                    </a>
                    <div class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownAccount">
                        <!-- User profile options -->
                        <!-- Example: -->
                        <a class="dropdown-item" href="#"><i class="material-icons md-perm_identity"></i>Edit
                            Profile</a>
                        <!-- Add more user profile options as needed -->
                    </div>
                </li>
            </ul>
        </div>
    </header>
    <!-- Sidebar -->
    <aside class="navbar-aside" id="offcanvas_aside">
        <div class="aside-top">
            <a href="index.html" class="brand-wrap">
                <img src="/admin_assets/imgs/theme/lensluxe.png" class="logo" alt="Evara Dashboard">
            </a>
            <div>
                <button class="btn btn-icon btn-aside-minimize"> <i class="text-muted material-icons md-menu_open"></i>
                </button>
            </div>
        </div>
        <nav>
            <ul class="menu-aside">
                <li class="menu-item">
                    <a class="menu-link" href="/admin/dashboard" onclick="highlightMenuItem(this)"> <i
                            class="icon material-icons md-home"></i>
                        <span class="text">Dashboard</span>
                    </a>
                </li>
                <!-- Customers link -->
                <li class="menu-item">
                    <a class="menu-link" href="/admin/customer" onclick="highlightMenuItem(this)">
                        <i class="icon material-icons md-people"></i>
                        <span class="text">Customers</span>
                    </a>
                </li>
                <!-- Categories link -->
                <li class="menu-item">
                    <a class="menu-link" href="/admin/category" onclick="highlightMenuItem(this)">
                        <i class="icon material-icons md-category"></i>
                        <span class="text">Categories</span>
                    </a>
                </li>
                <!-- Products link -->
                <li class="menu-item">
                    <a class="menu-link" href="/admin/product" onclick="highlightMenuItem(this)">
                        <i class="icon material-icons md-shopping_basket"></i>
                        <span class="text">Products</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/order" onclick="highlightMenuItem(this)">
                        <i class="icon material-icons md-store"></i>
                        <span class="text">Order</span>
                    </a>
                </li>
                <li class="menu-item active">
                    <a class="menu-link" href="/admin/offer" onclick="highlightMenuItem(this)">
                        <i class="icon material-icons md-local_offer"></i>
                        <span class="text">Offer</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/coupon" onclick="highlightMenuItem(this)">
                        <i class="material-icons md-store"></i>

                        <span class="text">Coupon</span>
                    </a>
                </li>
                <li class="menu-item">
                    <a class="menu-link" href="/admin/salesreport" onclick="highlightMenuItem(this)">
                        <i class="material-icons md-store"></i>

                        <span class="text">Salereport</span>
                    </a>
                </li>

            </ul>
        </nav>
    </aside>
    <!-- Main Content -->
    <main class="main-wrap">
        <section class="content-main">
            <div class="content-header">
                <div>
                    <h2 class="content-title card-title">Offer</h2>
                </div>
            </div>
         
            <div class="container">
                <div class="row justify-content-center">
                    <div class="col-md-10">
                        <div class="card">
                            <div class="card-header d-flex justify-content-between align-items-center">
                                <h4 class="card-title m-0">Category Offers</h4>
                                <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addCategoryModal">
                                    <i class="fas fa-plus"></i> Add Category Offer
                                </button>
                            </div>
                            <div class="card-body">
                                <table class="table table-striped table-hover">
                                    <thead>
                                        <tr>
                                            <th>Category</th>
                                            <th>Discount %</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody id="categoryOfferTableBody">
                                        <tbody id="categoryOfferTableBody">
                     
                                        </tbody>
                                    </table>
                                    <div id="emptyCategoryMessage" class="text-center" style="display: none;">
                                        <p>No category offers available.</p>
                                    </div>
                    
                                    </tbody>
                                </table>
                               
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Modal -->
            <div class="modal fade" id="addCategoryModal" tabindex="-1" role="dialog"
                aria-labelledby="addCategoryModalLabel" aria-hidden="true">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addCategoryModalLabel">Add Category Offer</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">

                            <form id="addCategoryForm">
                                <div class="form-group">
                                    <label for="categorySelect">Select Category:</label>
                                    <select class="form-control" id="categorySelect" name="category">
                                        <% categories.forEach(category=> { %>
                                            <option value="<%= category._id %>">
                                                <%= category.name %>
                                            </option>
                                            <% }); %>
                                    </select>
                                </div>
                                <div class="form-group">
                                    <label for="discountInput">Discount %:</label>
                                    <input type="number" class="form-control" id="discountInput" name="discount" min="0"
                                        max="100" step="1">
                                </div>
                                <button type="submit" class="btn btn-primary">Add Discount</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>


            <!-- Modal for updating category offer -->
<div class="modal fade" id="updateCategoryOfferModal" tabindex="-1" role="dialog" aria-labelledby="updateCategoryOfferModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="updateCategoryOfferModalLabel">Update Category Offer</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="updateCategoryOfferForm">
                    <div class="form-group">
                        <label for="updatedOfferInput">Updated Offer %:</label>
                        <input type="number" class="form-control" id="updatedOfferInput" name="updatedOffer" min="0" max="100" step="1">
                    </div>
                    <button type="submit" class="btn btn-primary">Update Offer</button>
                </form>
            </div>
        </div>
    </div>
</div>
 <br><br>
 
 <div class="container">
    <div class="row justify-content-center">
        <div class="col-md-10">
            <div class="card">
                <div class="card-header d-flex justify-content-between align-items-center">
                    <h4 class="card-title m-0">ReferralAmount</h4>
                </div>
                <div class="card-body">
                    <form id="referralCodeForm" action="/admin/add-referral" method="POST">
                        <div class="mb-3">
                            <label for="referredAmount" class="form-label">Referred Amount</label>
                            <input type="number" class="form-control" id="referredAmount" name="referredamount" required>
                        </div>
                        <div class="mb-3">
                            <label for="newUserAmount" class="form-label">New User Amount</label>
                            <input type="number" class="form-control" id="newUserAmount" name="newuseramount" required>
                        </div>
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </form>
                    <hr>
                    <h5 class="card-title mt-4">Referral Amount:-</h5>
                    <table class="table table-striped table-hover">
                        <thead>
                            <tr>
                                <th>Referred Amount</th>
                                <th>New User Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% referralcode.forEach(code => { %>
                                <tr>
                                    <td><%= code.referredamount %></td>
                                    <td><%= code.newuseramount %></td>
                                </tr>
                            <% }) %>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
 
   
 
 <main class="container">
    <h1 class="text-center mt-3">Product Offers</h1>
    <section class="input-group mb-3">
        <input type="text" id="searchInput" class="form-control rounded-pill" placeholder="Search by name" aria-label="Search by name">
        <button class="btn btn-primary rounded-pill" type="button" id="searchButton">Search</button>
    </section>
    <section class="container bg-light" style="max-height: 400px; overflow-y: auto;">
        <table id="productTable" class="table">
            <thead class="thead-dark">
                <tr>
                    <th>Image</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>Discount</th>
                    <th>Discount Price</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody id="productOfferTableBody">
                <% products.forEach(product => { %>
                <tr>
                    <td><img src="/productimages/<%= product.images[0] %>" alt="<%= product.name %>" style="max-width: 100px;"></td>
                    <td><%= product.name %></td>
                    <td>₹<%= product.price %></td>
                    <td><input type="number" id="discount-<%= product._id %>" value="<%= product.discount %>" min="0" max="100" oninput="validateDiscount(this)"></td>
                    <td><%= product.afterdiscount %></td>
                    <td>
                        <button class="btn btn-primary rounded-pill add-offer-btn" data-product-id="<%= product._id %>">Add Offer</button>
                        <button class="btn btn-danger rounded-pill delete-btn" onclick="deleteProductOffer('<%= product._id %>')">Delete</button>
                    </td>
                </tr>
                <% }) %>
            </tbody>
        </table>
    </section>
</main> 







    <!-- Footer -->
    <footer class="main-footer font-xs">
        <div class="row pb-30 pt-15">
            <div class="col-sm-6">
                <script>
                    document.write(new Date().getFullYear())
                </script> ©, Evara - HTML Ecommerce Template .
            </div>
            <div class="col-sm-6">
                <div class="text-sm-end">
                    All rights reserved
                </div>
            </div>
        </div>
    </footer>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="/admin_assets/js/vendors/jquery-3.6.0.min.js"></script>
    <script src="/admin_assets/js/vendors/bootstrap.bundle.min.js"></script>

    <script src="/admin_assets/js/main.js" type="text/javascript"></script>
    <script>
        // Function to highlight clicked sidebar item
        function highlightMenuItem(item) {
            // Remove 'active' class from all menu items
            var menuItems = document.querySelectorAll('.menu-aside .menu-item');
            menuItems.forEach(function (menuItem) {
                menuItem.classList.remove('active');
            });

            // Add 'active' class to the clicked menu item
            item.parentNode.classList.add('active');
        }
    </script>

<script>
    document.getElementById('addCategoryForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const category = document.getElementById('categorySelect').value;
        const discount = document.getElementById('discountInput').value;
        const body = JSON.stringify({ category, discount });

        fetch(`/admin/add-discountoffer`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: body
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
            console.log('Discount added successfully:', data);
            // Show SweetAlert on success
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Category offer added successfully.',
                showConfirmButton: false,
                timer: 1500
            }).then(() => {
                                location.reload()
                            });
        })
        .catch(error => {
            console.error('Error adding discount:', error);
            // Show SweetAlert on error
            Swal.fire({
                icon: 'error',
                title: 'Error!',
                text: 'Failed to add category offer. Please try again.',
                showConfirmButton: false,
                timer: 2000
            });
        });
    });
</script>




<script>
    document.addEventListener('DOMContentLoaded', function() {
       
        fetch('/admin/categories-with-offers')
            .then(response => response.json())
            .then(data => {
                const tableBody = document.getElementById('categoryOfferTableBody');
                const updateCategoryOfferModal = document.getElementById('updateCategoryOfferModal');

               
                if (data.length === 0) {
                    const emptyMessage = document.createElement('tr');
                    emptyMessage.innerHTML = `<td colspan="3" class="text-center">No category offers available.</td>`;
                    tableBody.appendChild(emptyMessage);
                } else {
                 
                    data.forEach(category => {
                        const row = document.createElement('tr');
                        row.innerHTML = `
                            <td>${category.name}</td>
                            <td>${category.offer}%</td>
                            <td>
                                <button class="btn btn-primary update-btn" data-category="${category._id}" data-offer="${category.offer}">
                                    Update
                                </button>
                                <button class="btn btn-danger delete-btn" data-category="${category._id}">
                                    Delete
                                </button>
                            </td>
                        `;
                        tableBody.appendChild(row);
                    });

                   
                    document.querySelectorAll('.update-btn').forEach(button => {
                        button.addEventListener('click', function() {
                            const categoryId = this.getAttribute('data-category');
                            const currentOffer = this.getAttribute('data-offer');

                            document.getElementById('updatedOfferInput').value = currentOffer;
                            $('#updateCategoryOfferModal').modal('show');

                            document.getElementById('updateCategoryOfferForm').addEventListener('submit', function(event) {
                                event.preventDefault();
                                const updatedOffer = document.getElementById('updatedOfferInput').value;
                                
                                fetch('/admin/update-category-offer', {
                                    method: 'POST',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    },
                                    body: JSON.stringify({ category: categoryId, discount: updatedOffer })
                                })
                                .then(response => response.json())
                                .then(data => {
                                    console.log('Category offer updated successfully:', data);
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Success!',
                                        text: 'Category offer updated successfully.',
                                        showConfirmButton: true
                                    }).then(() => {
                                        location.reload();
                                    });
                                })
                                .catch(error => {
                                    console.error('Error updating category offer:', error);
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error!',
                                        text: 'Failed to update category offer. Please try again.',
                                        showConfirmButton: false,
                                        timer: 2000
                                    });
                                });
                            });
                        });
                    });

                    document.querySelectorAll('.delete-btn').forEach(button => {
                        button.addEventListener('click', function() {
                            const categoryId = this.getAttribute('data-category');

                            
                            Swal.fire({
                                title: 'Are you sure?',
                                text: 'This action cannot be undone.',
                                icon: 'warning',
                                showCancelButton: true,
                                confirmButtonColor: '#3085d6',
                                cancelButtonColor: '#d33',
                                confirmButtonText: 'Yes, delete it!'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    fetch('/admin/delete-category-offer', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json'
                                        },
                                        body: JSON.stringify({ category: categoryId })
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        console.log('Category offer deleted:', data);
                                        Swal.fire({
                                            icon: 'success',
                                            title: 'Success!',
                                            text: data.message,
                                            showConfirmButton: false,
                                            timer: 1500
                                        }).then(() => {
                                            location.reload();
                                        });
                                    })
                                    .catch(error => {
                                        console.error('Error deleting category offer:', error);
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Error!',
                                            text: 'Failed to delete category offer. Please try again.',
                                            showConfirmButton: false,
                                            timer: 2000
                                        });
                                    });
                                }
                            });
                        });
                    });
                }
            })
            .catch(error => {
                console.error('Error fetching categories with offers:', error);
            });
    });
</script>


<script>
    document.addEventListener('DOMContentLoaded', function() {
        fetch('/admin/product-offers') 
            .then(response => response.json())
            .then(data => {
                const tableBody = document.getElementById('productOfferTableBody');
                data.forEach(product => {
                    const row = document.createElement('tr');
                    row.innerHTML = `
                        <td><img src="${product.image}" alt="${product.name}" style="max-width: 100px;"></td>
                        <td>${product.name}</td>
                        <td>$${product.price}</td>
                        <td><input type="number" id="discount-${product._id}" value="${product.discount}" min="0" max="100"></td>
                        <td><button class="btn btn-primary update-btn" data-product="${product._id}">Update</button></td>
                    `;
                    tableBody.appendChild(row);
                });

                // Attach event listeners after adding the buttons to the table
                document.querySelectorAll('.update-btn').forEach(button => {
                    button.addEventListener('click', function() {
                        const productId = this.getAttribute('data-product');
                        const discountInput = document.getElementById(`discount-${productId}`);
                        const updatedDiscount = discountInput.value;
                        
                    });
                });
            })
            .catch(error => {
                console.error('Error fetching product offers:', error);
            });
    });
</script>


<script>
    document.addEventListener('DOMContentLoaded', function() {
      const addOfferButtons = document.querySelectorAll('.add-offer-btn');
    
      addOfferButtons.forEach(btn => {
        btn.addEventListener('click', async function() {
          const productId = this.dataset.productId;
          const discountInput = document.getElementById(`discount-${productId}`);
          const discount = discountInput.value;
    
          try {
            const response = await fetch('/admin/add-product-offer', {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json'
              },
              body: JSON.stringify({ productId, discount })
            });
    
            const data = await response.json();
    
            if (response.ok) {
              // Handle the successful response
              Swal.fire({
                title: "Success",
                text: data.message,
                icon: "success",
                confirmButtonText: "OK",
              })
              .then(() => {
                                location.reload()
                            });
            } else {
              // Handle the error response
              Swal.fire({
                title: "Error",
                text: data.error || "Failed to add product offer",
                icon: "error",
                confirmButtonText: "OK",
              });
            }
          } catch (error) {
            console.error('An error occurred:', error);
            Swal.fire({
              title: "Error",
              text: "An error occurred while adding the product offer",
              icon: "error",
              confirmButtonText: "OK",
            });
          }
        });
      });
    });
    </script>


<script>
    const deleteProductOffer = (productId) => {
        console.log(productId,'lioejkjjuj')
        fetch(`/admin/delete-product-offer/${productId}`, {
            method: 'DELETE',
            headers: {
                'Content-Type': 'application/json'
            }
        })
        .then(response => {
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            return response.json();
        })
        .then(data => {
           
            Swal.fire({
                icon: 'success',
                title: 'Success',
                text: data.message,
                timer: 3000 
            }).then(() => {
                                location.reload()
                            });
            console.log(data.message);
        })
        .catch(error => {
            
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Error deleting product offer. Please try again later.',
                timer: 3000
            });
            console.error('Error deleting product offer:', error);
        });
    };
</script>


<script>
    document.addEventListener("DOMContentLoaded", function() {
        var searchInput = document.getElementById("searchInput");
        var searchButton = document.getElementById("searchButton");
        var productTable = document.getElementById("productTable");
        var rows = productTable.getElementsByTagName("tr");

        searchButton.addEventListener("click", function() {
            var searchText = searchInput.value.toLowerCase();
            for (var i = 0; i < rows.length; i++) {
                var productName = rows[i].getElementsByTagName("td")[1]; 
                if (productName) {
                    var textValue = productName.textContent || productName.innerText;
                    if (textValue.toLowerCase().indexOf(searchText) > -1) {
                        rows[i].style.display = "";
                    } else {
                        rows[i].style.display = "none";
                    }
                }
            }
        });

        searchInput.addEventListener("keyup", function(event) {
            if (event.key === "Enter") {
                searchButton.click();
            }
        });
    });
</script>


<script>
    function validateDiscount(input) {
        let value = parseInt(input.value);
        if (isNaN(value) || value < 0) {
            input.value = 0;
        } else if (value > 100) {
            input.value = 100;
        }
    }

    document.querySelectorAll('.add-offer-btn').forEach(button => {
        button.addEventListener('click', function() {
            const productId = this.dataset.productId;
            const discountInput = document.getElementById(`discount-${productId}`);
            const discountValue = parseInt(discountInput.value);
            if (discountValue > 0 && discountValue <= 100) {
                // Submit the discount value to the backend
                console.log(`Product ID: ${productId}, Discount: ${discountValue}`);
                // Add your AJAX or form submission logic here
            } else {
                alert('Discount value must be between 0 and 100.');
            }
        });
    });
</script>

</body>

</html>